version: '3.8'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka-internal.io


  auth:
    build: ./auth
    # ports:
    #   - 5001:5000
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: admin
      DB_NAME: auth-db
    depends_on:
      - db
    volumes:
      - ./auth:/usr/app
      - /usr/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true

  instructor:
    build: ./instructor
    # ports:
    #   - 5002:5000
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: admin
      DB_NAME: instructor-db
    depends_on:
      - db
    volumes:
      - ./instructor:/usr/app
      - /usr/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
            
  course:
    build: ./course
    # ports:
    #   - 5002:5000
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: admin
      DB_NAME: course-db
    depends_on:
      - db
    volumes:
      - ./course:/usr/app
      - /usr/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true      

  nginx:
    build: ./nginx
    links:
      - auth
      - instructor
      - course
    ports:
      - '80:80'

  db:
    image: postgres:14.4-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    ports:
      - '5432:5432'
    volumes:
      - ./data/db:/var/lib/postgresql/data

  pgAdmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@test.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - 8000:80
    volumes:
      - ./data/pgadmin-data:/var/lib/pgadmin

volumes:
  db:
  pgAdmin:
